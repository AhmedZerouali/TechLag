# -*- coding: utf-8 -*-
#
# Copyright (C) 2015-2018 Bitergia
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1335, USA.
#
# Authors:
#     Ahmed Zerouali <ahmed@bitergia.com>
#     Valerio Cosentino <valcos@bitergia.com>
#

import argparse
import logging
import sys

from techlag.techlag import TechLag


def get_params_parser():
    """Parse command line arguments

    Valid arguments are:
        -h, --help: summary about how to use the tool
        -p, --package: package name
        -v, --version: package version
        -k, --kind: target dependencies kind: devDependencies or dependencies
        -j, --json: package.json URI
    """

    parser = argparse.ArgumentParser(usage='',
                                     description='',
                                     epilog='',
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
                                     add_help=False)

    parser.add_argument('-h', '--help', action='help', help=argparse.SUPPRESS)
    parser.add_argument('-p', '--package', dest='package', help="package name")
    parser.add_argument('-v', '--version', dest='version', help="package version or constraint")
    parser.add_argument('-k', '--kind', dest='kind', help="target dependencies kind: devDependencies or dependencies")
    parser.add_argument('-j', '--json', dest='pjson', help="package.json URL")

    if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)

    return parser


def get_params():

    parser = get_params_parser()
    args = parser.parse_args()

    msg = "Please enter one of the following commands:\n" \
          "(1) --package <p> --version <v> --kind <k>,\n" \
          "(2) --json <package.json path> --kind <k>,\n" \
          "(3) --help"

    if args.pjson and args.kind:
        if args.package or args.version:
            logging.error(msg)
            sys.exit(1)
    elif args.package and args.version and args.kind:
        if args.pjson:
            logging.error(msg)
            sys.exit(1)

    return args


def main():
    args = get_params()

    try:
        tl = TechLag(args.package, args.version, args.kind, args.pjson)
        tl.analyze()
    except Exception as e:
        logging.error(e, exc_info=True)


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        s = "\n\nReceived Ctrl-C or other break signal. Exiting.\n"
        sys.stderr.write(s)
        sys.exit(0)
